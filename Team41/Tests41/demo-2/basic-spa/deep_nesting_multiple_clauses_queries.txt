1 - valid usesP - one procedure one variable, select procedure
procedure p; variable v;
Select p such that Uses(p, v)
deepNesting, procedure29, procedure35, doesNotModify
5000
2 - valid usesP - one procedure one variable, select tuple
procedure p; variable v;
Select <p, v> such that Uses(p, v)
deepNesting x1, deepNesting x2, deepNesting x3, deepNesting x4, deepNesting x5, deepNesting x6, deepNesting x7, deepNesting x8, deepNesting x9, deepNesting x10, deepNesting x11, deepNesting x12, deepNesting x13, deepNesting x14, deepNesting x15, deepNesting x16, deepNesting x17, deepNesting x18, deepNesting x19, deepNesting x20, deepNesting x21, deepNesting x22, deepNesting x26, deepNesting x29, deepNesting x32, deepNesting x37, deepNesting x40, procedure29 x1, procedure29 x2, procedure29 x3, procedure29 x4, procedure29 x40, procedure29 x5, procedure29 x6, procedure29 x17, procedure29 x29, procedure29 x32, procedure29 x37, procedure35 x2, procedure35 x3, procedure35 x4,procedure35 x5, procedure35 x17, procedure35 x37, procedure35 x40, doesNotModify x41
5000
3 - valid usesP - one procedure one IDENT select procedure
procedure p;
Select p such that Uses(p, "x3")
deepNesting, procedure29, procedure35
5000
4 - valid usesP - one procedure one IDENT select procedure
procedure p;
Select p such that Uses(p, "x41")
doesNotModify
5000
5 - valid usesP - one procedure one IDENT select procedure
procedure p;
Select p such that Uses(p, "x9")
deepNesting
5000
6 - valid usesP - one call one variable, select call
call c; variable v;
Select c such that Uses(c, v)
23, 35
5000
7 - valid usesP - one call one variable, select tuple
call c; variable v;
Select <c, v> such that Uses(c, v)
23 x1, 23 x2, 23 x3, 23 x4, 23 x5, 23 x6, 23 x17, 23 x29, 23 x32, 23 x37, 23 x40, 35 x17, 35 x2, 35 x3, 35 x37, 35 x4, 35 x40, 35 x5
5000
8 - valid usesP - one call one IDENT select call
call c;
Select c such that Uses(c, "x3")
23, 35
5000
9 - valid usesP - one call one IDENT select call
call c;
Select c such that Uses(c, "x41")
none
5000
10 - valid usesP - one call one IDENT select call
call c;
Select c such that Uses(c, "x9")
none
5000
11 - valid usesP - one number one IDENT select BOOLEAN
Select BOOLEAN such that Uses(23, "x5")

TRUE
5000
12 - valid usesP - two IDENT select BOOLEAN

Select BOOLEAN such that Uses("procedure29", "x5")
TRUE
5000
13 - valid modifiesP - one number one IDENT select BOOLEAN

Select BOOLEAN such that Uses(23, "x41")
FALSE
5000
14 - valid modifiesP - two IDENT select BOOLEAN

Select BOOLEAN such that Uses("doesNotModify", "x41")
TRUE
5000
15 - valid modifiesP - one procedure one variable select procedure
procedure p; variable v;
Select p such that Modifies(p, v)
deepNesting, procedure29, procedure35
5000
16 - valid modifiesP - one procedure one variable select tuple
procedure p; variable v;
Select <p, v> such that Modifies(p, v)
deepNesting x1, deepNesting x5, deepNesting x6, deepNesting x9, deepNesting x14, deepNesting x17, deepNesting x19, deepNesting x20, deepNesting x24, deepNesting x25, deepNesting x27, deepNesting x28, deepNesting x36, procedure29 x1, procedure29 x5, procedure29 x6, procedure29 x17, procedure29 x27, procedure29 x28, procedure29 x36, procedure35 x1, procedure35 x17, procedure35 x36
5000
17 - valid modifiesP - one procedure one IDENT select procedure
procedure p;
Select p such that Modifies(p, "x27")
deepNesting, procedure29
5000
18 - valid modifiesP - one procedure one IDENT select procedure
procedure p;
Select p such that Modifies(p, "x9")
deepNesting
5000
19 - valid modifiesP - one procedure one IDENT select procedure
procedure p;
Select p such that Modifies(p, "x36")
deepNesting, procedure29, procedure35
5000
20 - valid modifiesP - one procedure one variable select call
call c; variable v;
Select c such that Modifies(c, v)
23, 35
5000
21 - valid modifiesP - one procedure one variable select tuple
call c; variable v;
Select <c, v> such that Modifies(c, v)
23 x1, 23 x5, 23 x6, 23 x17, 23 x27, 23 x28, 23 x36, 35 x1, 35 x17, 35 x36
5000
22 - valid modifiesP - one procedure one IDENT select call
call c;
Select c such that Modifies(c, "x1")
23, 35
5000
23 - valid modifiesP - one procedure one IDENT select call
call c;
Select c such that Modifies(c, "x27")
23
5000
24 - valid modifiesP - one procedure one IDENT select call
call c;
Select c such that Modifies(c, "x9")
none
5000
25 - valid modifiesP - one procedure one IDENT select call
call c;
Select c such that Modifies(c, "x36")
23, 35
5000
26 - valid modifiesP - one number one IDENT select BOOLEAN

Select BOOLEAN such that Modifies(23, "x36")
TRUE
5000
27 - valid modifiesP - two IDENT select BOOLEAN

Select BOOLEAN such that Modifies("procedure29", "x36")
TRUE
5000
28 - valid follows - one number one statement - select BOOLEAN [start of multiple clauses]
stmt s; assign a; variable v;
Select BOOLEAN such that Follows(10, s) pattern a(v, _)
TRUE
5000
29 - valid follows - one number one statement - select tuple
stmt s; assign a; variable v;
Select <a, v> such that Follows(10, s) pattern a(v, _)
5 x5, 6 x6, 9 x9, 17 x17, 19 x19, 20 x20, 24 x24, 25 x25, 27 x27, 28 x28, 30 x27, 33 x5, 34 x6, 38 x17, 39 x1
5000
30 - valid followsT - one number one statement - select BOOLEAN
stmt s; assign a; variable v;
Select BOOLEAN such that Follows*(10, s) pattern a(v, _)
TRUE
5000
31 - valid followsT - one number one statement - select tuple
stmt s; assign a; variable v;
Select <a, v> such that Follows*(10, s) pattern a(v, _)
5 x5, 6 x6, 9 x9, 17 x17, 19 x19, 20 x20, 24 x24, 25 x25, 27 x27, 28 x28, 30 x27, 33 x5, 34 x6, 38 x17, 39 x1
5000
32 - valid follows - one number one statement - select BOOLEAN
assign a; variable v;
Select BOOLEAN such that Follows(10, a) pattern a(v, _"x19"_)
TRUE
5000
33 - valid follows - one number one statement - select tuple
assign a; variable v;
Select <a, v> such that Follows(10, a) pattern a(v, _"x19"_)
19 x19
5000
34 - valid follows - one number one statement - select BOOLEAN
assign a; variable v;
Select BOOLEAN such that Follows(10, a) pattern a(v, "x19 * x19")
TRUE
5000
35 - valid follows - one number one statement - select tuple
assign a; variable v;
Select <a, v> such that Follows(10, a) pattern a(v, "x19 * x19")
19 x19
5000
36 - valid followsT - one number one statement - select BOOLEAN
stmt s; assign a; variable v;
Select BOOLEAN such that Follows*(10, a) pattern a(v, _"x9 + x9"_)
TRUE
5000
37 - valid followsT - one number one statement - select tuple
assign a; variable v;
Select <a, v> such that Follows*(10, a) pattern a(v, _"x9 + x9"_)
20 x20
5000
38 - valid modifies - one number one variable - select BOOLEAN
variable v; assign a;
Select BOOLEAN such that Modifies(6, v) pattern a(v, _)
TRUE
5000
39 - valid modifies - one number one variable - select tuple
stmt s; variable v; assign a;
Select <a, v> such that Modifies(6, v) pattern a(v, _)
6 x6, 34 x6
5000
40 - valid modifies - one statement one variable - select BOOLEAN
variable v; assign a;
Select BOOLEAN such that Modifies(1, v) pattern a(v, _)
TRUE
5000
41 - valid modifies - one statement one variable - select tuple
variable v; assign a;
Select <a, v> such that Modifies(1, v) pattern a(v, _)
5 x5, 6 x6, 9 x9, 17 x17, 19 x19, 20 x20, 24 x24, 25 x25, 27 x27, 28 x28, 30 x27, 33 x5, 34 x6, 38 x17, 39 x1
5000
42 - valid modifies - one statement one variable - select BOOLEAN
stmt s; variable v; assign a;
Select BOOLEAN such that Modifies(s, v) pattern a(v, _"x9 * 2"_)
FALSE
5000
43 - valid modifies - one statement one variable - select tuple
stmt s; variable v; assign a;
Select <s, v> such that Modifies(s, v) pattern a(v, _"x9 * 2"_)
none
5000
44 - valid modifies - one statement one variable - select tuple
stmt s; variable v; assign a;
Select <a, v> such that Modifies(s, v) pattern a(v, _"x9 * 2"_)
none
5000
45 - valid modifies - one statement one variable - select tuple
stmt s; variable v; assign a;
Select <a, s> such that Modifies(s, v) pattern a(v, _"x9 * 2"_)
none
5000
46 - valid modifies - one assign one variable - select BOOLEAN
assign a; variable v;
Select BOOLEAN such that Modifies(a, v) pattern a(v, "10")
TRUE
5000
47 - valid modifies - one assign one variable - select tuple
assign a; variable v;
Select <a, v> such that Modifies(a, v) pattern a(v, "10")
25 x25
5000
48 - valid clauses - same clause - select tuple [start of multi clause]
stmt s, s2; assign a; variable v;
Select <s, s2> such that Parent(s, s2) and Parent*(4, s2) and Parent*(8, s2)
8 9, 8 10, 8 19, 8 20, 8 21, 8 23, 8 24, 10 11, 10 12, 12 13, 12 14, 12 15, 15 16, 16 17, 16 18, 21 22
5000
49 - valid clauses - same clause - select tuple
stmt s, s2, s3; assign a; variable v;
Select <s, s2> such that Parent(s, s2) such that Parent*(4, s2) such that Parent*(8, s2)
8 9, 8 10, 8 19, 8 20, 8 21, 8 23, 8 24, 10 11, 10 12, 12 13, 12 14, 12 15, 15 16, 16 17, 16 18, 21 22
5000
50 - valid clauses - select tuple
stmt s, s2, s3; assign a; variable v;
Select <s3, s2> such that Parent(s, s2) such that Parent*(4, s2) such that Parent*(8, s2) and Follows(s3, s2)
9 10, 10 19, 13 14, 14 15, 17 18, 19 20, 20 21, 21 23, 23 24
5000
51 - valid clauses - select tuple
stmt s, s2, s3; assign a; variable v;
Select <s3, s2> such that Parent(s, s2) such that Parent*(4, s2) such that Parent*(8, s2) and Follows(s3, s2) and Modifies(s3, v)
9 10, 10 19, 14 15, 17 18, 19 20, 20 21, 23 24
5000
52 - valid clauses - select tuple
stmt s, s2, s3; assign a; variable v;
Select <s3, s2, s> such that Parent(s, s2) such that Parent*(4, s2) such that Parent*(8, s2) and Follows(s3, s2) and Modifies(s3, v)
9 10 8, 10 19 8, 14 15 12, 17 18 16, 19 20 8, 20 21 8, 23 24 8
5000
53 - valid clauses - select tuple different ordering
stmt s, s2, s3; assign a; variable v;
Select <s3, s2, s> such that Parent*(4, s2) and Follows(s3, s2) and Modifies(s3, v) such that Parent*(8, s2) such that Parent(s, s2)
9 10 8, 10 19 8, 14 15 12, 17 18 16, 19 20 8, 20 21 8, 23 24 8
5000
54 - valid clauses - select tuple one false
stmt s, s2, s3; assign a; variable v;
Select <s3, s2, s> such that Parent*(4, s2) and Follows(s3, s2) and Modifies(s3, v) such that Parent*(8, s2) such that Parent(s, s2) and Parent(s2, s)
none
5000
55 - valid clauses - select BOOLEAN
stmt s, s2; assign a; variable v;
Select BOOLEAN such that Parent(s, s2) pattern a(v, _)
TRUE
5000
56 - valid clauses - select statement
stmt s, s2; assign a; variable v;
Select s such that Parent(s, s2) pattern a(v, _)
1, 2, 3, 4, 7, 8, 10, 12, 15, 16, 21, 32, 37
5000
57 - valid clauses - select statement
stmt s, s2; assign a; variable v;
Select s2 such that Parent(s, s2) pattern a(v, _)
2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 34, 38
5000
58 - valid clauses - select BOOLEAN
assign a; variable v;
Select BOOLEAN such that Parent(4, a) pattern a(v, _)
TRUE
5000
59 - valid clauses - select tuple
assign a; variable v;
Select <a, v> such that Parent(4, a) pattern a(v, _)
5 x5, 6 x6
5000
60 - valid clauses - select BOOLEAN
assign a; variable v;
Select BOOLEAN such that Parent(4, a) pattern a(v, _"5"_)
TRUE
5000
61 - valid clauses - select tuple
assign a; variable v;
Select <a, v> such that Parent(4, a) pattern a(v, _"5"_)
5 x5
5000
62 - valid clauses - select BOOLEAN
assign a; variable v;
Select BOOLEAN such that Parent(2, a) pattern a(v, "x18 / 2")
FALSE
5000
63 - valid clauses - select tuple
assign a; variable v;
Select <a, v> such that Parent(2, a) pattern a(v, "x18 / 2")
none
5000
64 - valid clauses - select BOOLEAN
stmt s; assign a; variable v;
Select BOOLEAN such that Parent*(4, a) pattern a(v, _)
TRUE
5000
65 - valid clauses - select tuple
stmt s; assign a; variable v;
Select <a, v> such that Parent*(4, a) pattern a(v, _)
5 x5, 6 x6, 9 x9, 17 x17, 19 x19, 20 x20, 24 x24
5000
66 - valid clauses - different clause ordering select tuple
stmt s; assign a; variable v; procedure p;
Select <p, a, v> such that Modifies(p, v) and Parent*(4, a) pattern a(v, _)
deepNesting 5 x5, deepNesting 6 x6, deepNesting 9 x9, deepNesting 17 x17, deepNesting 19 x19, deepNesting 20 x20, deepNesting 24 x24, procedure29 5 x5, procedure29 6 x6, procedure29 17 x17, procedure35 17 x17
5000
67 - valid clauses - different clause ordering select tuple
stmt s; assign a; variable v; procedure p;
Select <p, a, v> such that Parent*(4, a) and Modifies(p, v) pattern a(v, _)
deepNesting 5 x5, deepNesting 6 x6, deepNesting 9 x9, deepNesting 17 x17, deepNesting 19 x19, deepNesting 20 x20, deepNesting 24 x24, procedure29 5 x5, procedure29 6 x6, procedure29 17 x17, procedure35 17 x17
5000
68 - valid clauses - different clause ordering select tuple
stmt s; assign a; variable v; procedure p;
Select <p, a, v> such that Parent*(4, a) such that Modifies(p, v) pattern a(v, _)
deepNesting 5 x5, deepNesting 6 x6, deepNesting 9 x9, deepNesting 17 x17, deepNesting 19 x19, deepNesting 20 x20, deepNesting 24 x24, procedure29 5 x5, procedure29 6 x6, procedure29 17 x17, procedure35 17 x17
5000
69 - valid clauses - different clause ordering select tuple
stmt s; assign a; variable v; procedure p;
Select <p, a, v> such that Modifies(p, v) pattern a(v, _) such that Parent*(4, a)
deepNesting 5 x5, deepNesting 6 x6, deepNesting 9 x9, deepNesting 17 x17, deepNesting 19 x19, deepNesting 20 x20, deepNesting 24 x24, procedure29 5 x5, procedure29 6 x6, procedure29 17 x17, procedure35 17 x17
5000
70 - valid clauses - different clause ordering select tuple
stmt s; assign a; variable v; procedure p;
Select <p, a, v> pattern a(v, _) such that Parent*(4, a) and Modifies(p, v)
deepNesting 5 x5, deepNesting 6 x6, deepNesting 9 x9, deepNesting 17 x17, deepNesting 19 x19, deepNesting 20 x20, deepNesting 24 x24, procedure29 5 x5, procedure29 6 x6, procedure29 17 x17, procedure35 17 x17
5000
71 - valid clauses - one clause false select tuple
stmt s; assign a; variable v; procedure p;
Select <p, a, v> pattern a(v, _) such that Parent*(4, a) and Modifies(p, v) such that Parent(5, 4)
none
5000
72 - valid clauses - select BOOLEAN
stmt s; assign a; variable v;
Select BOOLEAN such that Parent*(4, a) pattern a(v, _"x9 + x9"_)
TRUE
5000
73 - valid clauses - select tuple
stmt s; assign a, a2; variable v;
Select <v, a, a2> such that Parent*(4, a) pattern a(v, _"x9 + x9"_) pattern a2(v, _"(x9 + x9) * 2"_)
x20 20 20
5000
74 - valid clauses - select tuple
stmt s; assign a; variable v;
Select <a, v> such that Parent*(4, a) pattern a(v, _"x9 + x9"_)
20 x20
5000
75 - valid clauses - select BOOLEAN
stmt s; assign a; variable v;
Select BOOLEAN such that Parent*(4, a) pattern a(v, "10")
FALSE
5000
76 - valid clauses - select tuple
stmt s; assign a; variable v;
Select <a, v> such that Parent*(4, a) pattern a(v, "10")
none
5000
77 - valid clauses - select BOOLEAN
stmt s; assign a; variable v;
Select BOOLEAN such that Parent*(4, a) pattern a("x19", _)
TRUE
5000
78 - valid clauses - select tuple
stmt s; assign a; variable v;
Select <a> such that Parent*(4, a) pattern a("x19", _)
19
5000
79 - valid clauses - select BOOLEAN
stmt s; assign a; variable v;
Select BOOLEAN such that Parent*(4, a) pattern a("x20", _"x900 + x900"_)
FALSE
5000
80 - valid clauses - select tuple
stmt s; assign a; variable v;
Select <a> such that Parent*(4, a) pattern a("x20", _"x900 + x900"_)
none
5000
81 - valid clauses - select BOOLEAN
stmt s; variable v; assign a;
Select BOOLEAN such that Uses(8, v) pattern a(v, _)
TRUE
5000
82 - valid clauses - select tuple
stmt s; variable v; assign a;
Select <a, v> such that Uses(8, v) pattern a(v, _)
5 x5, 33 x5, 6 x6, 34 x6, 17 x17, 9 x9, 19 x19, 20 x20, 39 x1, 38 x17
5000
83 - valid clauses - select BOOLEAN
assign a; variable v;
Select BOOLEAN such that Uses(3, v) pattern a(v, _)
TRUE
5000
84 - valid clauses - select tuple
assign a; variable v; stmt s2, s1;
Select <s2, s1> such that Uses(s1, v) pattern a(v, _) such that Parent(s2, s1)
1 2, 2 3, 2 27, 3 4, 4 5, 4 6, 4 7, 7 8, 8 9, 8 10, 8 19, 8 20, 8 21, 8 23, 10 12, 12 15, 32 33, 32 34, 37 38
5000
85 - valid clauses - select variable
assign a; variable v; stmt s2, s1;
Select v pattern a(v, _)
x1, x5, x6, x9, x17, x19, x20, x24, x25, x27, x28
5000
86 - valid clauses - select variable
assign a; variable v; stmt s2, s1;
Select a pattern a(v, _)
5, 6, 9, 17, 19, 20, 24, 25, 27, 28, 30, 33, 34, 38, 39
5000
87 - valid clauses - select tuple, verify cartesian product
assign a; variable v; stmt s2, s1;
Select <s2, s1, a> such that Uses(s1, v) pattern a(v, _) such that Parent(s2, s1)
1 2 17,1 2 19,1 2 20,1 2 33,1 2 34,1 2 38,1 2 39,1 2 5,1 2 6,1 2 9,10 12 39,12 15 39,2 27 39,2 3 17,2 3 19,2 3 20,2 3 33,2 3 34,2 3 38,2 3 39,2 3 5,2 3 6,2 3 9,3 4 17,3 4 19,3 4 20,3 4 33,3 4 34,3 4 38,3 4 39,3 4 5,3 4 6,3 4 9,32 33 33,32 33 5,32 34 34,32 34 6,37 38 17,37 38 38,4 5 39,4 6 33,4 6 34,4 6 5,4 6 6,4 7 17,4 7 19,4 7 20,4 7 33,4 7 34,4 7 38,4 7 39,4 7 5,4 7 6,4 7 9,7 8 17,7 8 19,7 8 20,7 8 33,7 8 34,7 8 38,7 8 39,7 8 5,7 8 6,7 8 9,8 10 39,8 19 19,8 20 9,8 21 20,8 23 17,8 23 33,8 23 34,8 23 38,8 23 39,8 23 5,8 23 6,8 9 9
5000
88 - valid clauses - select BOOLEAN
assign a; variable v;
Select BOOLEAN such that Uses(a, "x1") pattern a(v, "5 * 5 + x1")
FALSE
5000
89 - valid clauses - select tuple
assign a; variable v;
Select <a, v> such that Uses(a, "x1") pattern a(v, "5 * 5 + x1")
none
5000
90 - valid clauses - select BOOLEAN
assign a; variable v;
Select BOOLEAN such that Uses(a, v) pattern a (v, _"x5 * 2 + x4"_)
FALSE
5000
91 - valid clauses - select tuple
assign a; variable v;
Select <a, v> such that Uses(a, v) pattern a (v, _"x5 * 2 + x4"_)
none
5000
92 - valid clauses - select BOOLEAN
assign a; variable v;
Select BOOLEAN such that Uses(a, v) pattern a ("x27", _)
TRUE
5000
93 - valid clauses - select tuple
assign a; variable v;
Select <a, v> such that Uses(a, v) pattern a ("x27", _)
27 x1, 27 x2, 30 x1, 30 x2
5000
94 - valid clauses - select BOOLEAN
assign a; variable v;
Select BOOLEAN such that Uses(a, v) pattern a ("x20", _"x9 * 2"_)
FALSE
5000
95 - valid clauses - select tuple
assign a; variable v;
Select <a, v> such that Uses(a, v) pattern a ("x20", _"x9 * 2"_)
none
5000
96 - valid clauses - select BOOLEAN
assign a; variable v;
Select BOOLEAN such that Uses(a, v) pattern a (v, _"x900"_)
FALSE
5000
97 - valid clauses - select tuple
assign a; variable v;
Select <a, v> such that Uses(a, v) pattern a (v, _"x900"_)
none
5000
98 - invalid clause - syntax error
assign a; variable v;
Select <a, v> such that Uses(a, v) and pattern a (v, _"x900"_)
SyntaxError
5000
99 - invalid clause - syntax error
stmt s; assign a; variable v; procedure p;
Select <p, a, v> pattern a(v, _) and Parent*(4, a) and Modifies(p, v) such that Parent(5, 4)
SyntaxError
5000
100 - invalid clause - syntax error
stmt s; assign a; variable v; procedure p;
Select <p, a, v> such that pattern a(v, _) such that Parent*(4, a) and Modifies(p, v) such that Parent(5, 4)
SyntaxError
5000
101 - invalid clause - syntax error
stmt s; assign a; variable v; procedure p;
Select <p, a, v> pattern a(v, _) such that Parent*(4, a) and such that Modifies(p, v) such that Parent(5, 4)
SyntaxError
5000
102 - invalid clause - syntax error
stmt s; assign a; variable v; procedure p;
Select <p, a, v> such that Parent*(4, a) and Modifies(p, v) such that Parent(5, 4) and pattern a(v, _)
SyntaxError
5000
1 - milestone 1 bugs
assign a;
Select a pattern a(_, _" +temp"_)
SyntaxError
5000