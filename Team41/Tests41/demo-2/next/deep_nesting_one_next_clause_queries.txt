1 - valid next - two numbers, select BOOLEAN

Select BOOLEAN such that Next(4, 27)
TRUE
5000
2 - valid next - two numbers, select BOOLEAN

Select BOOLEAN such that Next(26, 27)
TRUE
5000
3 - valid next - two numbers, select BOOLEAN

Select BOOLEAN such that Next(25, 27)
FALSE
5000
4 - valid next - two numbers, select BOOLEAN

Select BOOLEAN such that Next(3, 27)
FALSE
5000
5 - valid next - two numbers, select BOOLEAN

Select BOOLEAN such that Next(19, 20)
TRUE
5000
6 - valid next - two numbers, select BOOLEAN

Select BOOLEAN such that Next(20, 19)
FALSE
5000
7 - valid next - two numbers, select BOOLEAN

Select BOOLEAN such that Next(28, 29)
FALSE
5000
8 - valid next - two numbers, select BOOLEAN

Select BOOLEAN such that Next(21, 29)
FALSE
5000
9 - valid next - two numbers, select BOOLEAN

Select BOOLEAN such that Next(21, 22)
TRUE
5000
10 - valid next - two numbers, select statement
stmt s;
Select s such that Next(19, 20)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35
5000
11 - valid next - one number one synonym, select synonym
assign a;
Select a such that Next(19, a)
20
5000
12 - valid next - one number one synonym, select synonym
stmt s;
Select s such that Next(19, s)
20
5000
12 - valid next - one number one synonym, select synonym
stmt s;
Select s such that Next(s, 17)
16
5000
12 - valid next - one number one synonym, select synonym
stmt s;
Select s such that Next(s, 18)
17
5000
12 - valid next - one number one synonym, select synonym
stmt s;
Select s such that Next(17, s)
18
5000
12 - valid next - one number one synonym, select synonym
stmt s;
Select s such that Next(18, s)
16
5000
12 - valid next - one number one synonym, select synonym
stmt s;
Select s such that Next(16, s)
15, 17
5000
13 - valid next - one number one synonym, select synonym
call c;
Select c such that Next(22, c)
none
5000
14 - valid next - one number one synonym, select synonym
if i;
Select i such that Next(1, i)
none
5000
15 - valid next - one number one synonym, select synonym
while w;
Select w such that Next(1, w)
2
5000
16 - valid next - one number one synonym, select synonym
print p;
Select p such that Next(1, p)
none
5000
17 - valid next - one number one synonym, select synonym
read r;
Select r such that Next(1, r)
none
5000
18 - valid next - one number one _, select BOOLEAN

Select BOOLEAN such that Next (2, _)
TRUE
5000
19 - valid next - one number one _, select BOOLEAN

Select BOOLEAN such that Next (1, _)
TRUE
5000
20 - valid next - one synonym one _, select BOOLEAN
assign a;
Select BOOLEAN such that Next (a, _)
TRUE
5000
21 - valid next - one synonym one _, select BOOLEAN
while w;
Select BOOLEAN such that Next (w, _)
TRUE
5000
22 - valid next - one synonym one _, select synonym
assign a;
Select a such that Next (_, a)
5, 6, 9, 17, 19, 20, 24, 25, 27, 28, 31, 32
5000
23 - valid next - one synonym one _, select synonym
while w;
Select w such that Next (_, w)
1, 2, 4, 7, 8, 12, 15, 16, 21, 29, 30, 33
5000
24 - valid next - two _, select BOOLEAN

Select BOOLEAN such that Next (_, _)
TRUE
5000
25 - valid next - two _, select synonym
stmt s;
Select s such that Next (_, _)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35
5000
26 - valid next - two synonym, select tuple
assign a1, a2;
Select <a1, a2> such that Next(a1, a2)
5 6, 19 20, 31 32
5000
27 - valid next - two synonym, select tuple
read r; assign a;
Select <r, a> such that Next(r, a)
none
5000
28 - valid next - two synonym, select tuple
read r; while w;
Select <w, r> such that Next(w, r)
29 35
5000
29 - valid next - two synonym, select tuple
read r; if i;
Select <r, i> such that Next(r, i)
none
5000
30 - valid next - two synonym, select tuple
read r; if i;
Select <r, i> such that Next(i, r)
none
5000
31 - valid next - two synonym, select tuple
print p; assign a;
Select <p, a> such that Next(p, a)
11 19, 26 27
5000
32 - valid next - two synonym, select tuple
print p; while w;
Select <w, p> such that Next(w, p)
12 13, 21 22, 33 34
5000
33 - valid next - two synonym, select tuple
print p; if i;
Select <p, i> such that Next(p, i)
none
5000
34 - valid next - two synonym, select tuple
print p; if i;
Select <p, i> such that Next(i, p)
11 10
5000
35 - valid next - two synonym, select tuple
call c; assign a;
Select <c, a> such that Next(c, a)
23 24
5000
36 - valid next - two synonym, select tuple
call c; while w;
Select <w, c> such that Next(w, c)
21 23
5000
37 - valid next - two synonym, select tuple
call c; if i;
Select <c, i> such that Next(c, i)
none
5000
38 - valid next - two synonym, select tuple
call c; if i;
Select <c, i> such that Next(i, c)
none
5000
39 - valid next - two synonym, select tuple
stmt s; assign a;
Select <s, a> such that Next(s, a)
4 5, 5 6, 8 9, 16 17, 11 19, 12 19, 19 20, 23 24, 3 25, 26 27, 4 27, 2 28, 30 31, 31 32
5000
40 - valid next - two synonym, select tuple
stmt s; while w;
Select <s, w> such that Next(w, s)
2 1, 3 2, 4 7, 5 4, 7 8, 8 7, 9 8, 12 15, 13 12, 15 16, 16 15, 17 16, 19 12, 22 21, 23 21, 27 4, 28 2, 29 30, 30 29, 30 33, 31 30, 34 33, 35 29
5000
41 - valid next - two synonym, select tuple
stmt s; if i;
Select <s, i> such that Next(s, i)
2 3, 9 10
5000
42 - valid next - two synonym, select tuple
stmt s; if i;
Select <s, i> such that Next(i, s)
4 3, 11 10, 12 10, 25 3
5000
43 - invalid next - procedure
procedure p;
Select BOOLEAN such that Next(1, p)
SemanticError
5000
44 - invalid next - variable
variable v;
Select BOOLEAN such that Next(1, v)
SemanticError
5000
45 - invalid next - entRef

Select BOOLEAN such that Next(29, "x35")
SyntaxError
5000
46 - valid Next* - two numbers, select BOOLEAN

Select BOOLEAN such that Next*(4, 27)
TRUE
5000
47 - valid Next* - two numbers, select BOOLEAN

Select BOOLEAN such that Next*(26, 27)
TRUE
5000
48 - valid Next* - two numbers, select BOOLEAN

Select BOOLEAN such that Next*(25, 27)
TRUE
5000
49 - valid Next* - two numbers, select BOOLEAN

Select BOOLEAN such that Next*(3, 27)
TRUE
5000
50 - valid Next* - two numbers in while loop, select BOOLEAN

Select BOOLEAN such that Next*(19, 20)
TRUE
5000
50 - valid Next* - two numbers in while loop, select BOOLEAN

Select BOOLEAN such that Next*(20, 19)
TRUE
5000
51 - valid Next* - two numbers in while loop, select BOOLEAN

Select BOOLEAN such that Next*(24, 19)
TRUE
5000
51 - valid Next* - two numbers in while loop, select BOOLEAN

Select BOOLEAN such that Next*(24, 9)
TRUE
5000
51 - valid Next* - two numbers in while loop, select BOOLEAN

Select BOOLEAN such that Next*(9, 24)
TRUE
5000
52 - valid Next* - two numbers, select BOOLEAN

Select BOOLEAN such that Next*(28, 29)
FALSE
5000
53 - valid Next* - two numbers, select BOOLEAN

Select BOOLEAN such that Next*(21, 29)
FALSE
5000
54 - valid Next* - two numbers, select BOOLEAN

Select BOOLEAN such that Next*(21, 22)
TRUE
5000
55 - valid Next* - two numbers, select statement
stmt s;
Select s such that Next*(19, 20)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35
5000
56 - valid Next* - one number one synonym, select synonym
assign a;
Select a such that Next*(19, a)
5, 6, 9, 17, 19, 20, 24, 25, 27, 28
5000
57 - valid Next* - one number one synonym, select synonym
stmt s;
Select s such that Next*(19, s)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28
5000
58 - valid Next* - one number one synonym, select synonym
call c;
Select c such that Next*(22, c)
23
5000
59 - valid Next* - one number one synonym, select synonym
if i;
Select i such that Next*(1, i)
3, 10
5000
60 - valid Next* - one number one synonym, select synonym
while w;
Select w such that Next*(1, w)
1, 2, 4, 7, 8, 12, 15, 16, 21
5000
61 - valid Next* - one number one synonym, select synonym
print p;
Select p such that Next*(1, p)
11, 13, 18, 22, 26
5000
62 - valid Next* - one number one synonym, select synonym
read r;
Select r such that Next*(1, r)
14
5000
63 - valid Next* - one number one _, select BOOLEAN

Select BOOLEAN such that Next* (2, _)
TRUE
5000
64 - valid Next* - one number one _, select BOOLEAN

Select BOOLEAN such that Next* (1, _)
TRUE
5000
65 - valid Next* - one synonym one _, select BOOLEAN
assign a;
Select BOOLEAN such that Next* (a, _)
TRUE
5000
66 - valid Next* - one synonym one _, select BOOLEAN
while w;
Select BOOLEAN such that Next* (w, _)
TRUE
5000
67 - valid Next* - one synonym one _, select synonym
assign a;
Select a such that Next* (_, a)
5, 6, 9, 17, 19, 20, 24, 25, 27, 28, 31, 32
5000
68 - valid Next* - one synonym one _, select synonym
while w;
Select w such that Next* (_, w)
1, 2, 4, 7, 8, 12, 15, 16, 21, 29, 30, 33
5000
69 - valid Next* - two _, select BOOLEAN

Select BOOLEAN such that Next* (_, _)
TRUE
5000
70 - valid Next* - two _, select synonym
stmt s;
Select s such that Next* (_, _)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35
5000
71 - valid Next* - two synonym, select tuple
assign a1, a2;
Select <a1, a2> such that Next*(a1, a2)
5 17, 5 19, 5 20, 5 24, 5 25, 5 27, 5 28, 5 5, 5 6, 5 9, 6 17, 6 19, 6 20, 6 24, 6 25, 6 27, 6 28, 6 5, 6 6, 6 9, 9 17, 9 19, 9 20, 9 24, 9 25, 9 27, 9 28, 9 5, 9 6, 9 9, 17 17, 17 19, 17 20, 17 24, 17 25, 17 27, 17 28, 17 5, 17 6, 17 9, 19 17, 19 19, 19 20, 19 24, 19 25, 19 27, 19 28, 19 5, 19 6, 19 9, 20 17, 20 19, 20 20, 20 24, 20 25, 20 27, 20 28, 20 5,20 6, 20 9, 24 17, 24 19, 24 20, 24 24, 24 25, 24 27, 24 28, 24 5, 24 6, 24 9, 25 17, 25 19, 25 20, 25 24, 25 25, 25 27, 25 28, 25 5, 25 6, 25 9, 27 17, 27 19, 27 20, 27 24, 27 25, 27 27, 27 28, 27 5, 27 6, 27 9, 28 17, 28 19, 28 20, 28 24, 28 25, 28 27, 28 28, 28 5, 28 6, 28 9, 31 31, 31 32, 32 31, 32 32
5000
72 - valid Next* - two synonym, select tuple
read r; assign a;
Select <r, a> such that Next*(r, a)
14 5, 14 6, 14 9, 14 17, 14 19, 14 20, 14 24, 14 25, 14 27, 14 28
5000
73 - valid Next* - two synonym, select tuple
read r; while w;
Select <w, r> such that Next*(w, r)
1 14, 2 14, 4 14, 7 14, 8 14, 12 14, 15 14, 16 14, 21 14, 29 35, 30 35, 33 35
5000
74 - valid Next* - two synonym, select tuple
read r; if i;
Select <r, i> such that Next*(r, i)
14 10,14 3
5000
75 - valid Next* - two synonym, select tuple
read r; if i;
Select <r, i> such that Next*(i, r)
14 10,14 3
5000
76 - valid Next* - two synonym, select tuple
print p; assign a;
Select <p, a> such that Next*(p, a)
11 5, 11 6, 11 9, 11 17, 11 19, 11 20 ,11 24, 11 25, 11 27, 11 28, 13 5, 13 6, 13 9, 13 17, 13 19, 13 20, 13 24, 13 25, 13 27, 13 28, 18 17, 18 19, 18 20, 18 24, 18 25, 18 27, 18 28, 18 5, 18 6, 18 9, 22 17, 22 19, 22 20, 22 24, 22 25, 22 27, 22 28, 22 5, 22 6, 22 9, 26 17, 26 19, 26 20, 26 24, 26 25, 26 27, 26 28, 26 5, 26 6, 26 9, 34 31, 34 32
5000
77 - valid Next* - two synonym, select tuple
print p; while w;
Select <p, w> such that Next*(w, p)
11 1,11 12,11 15,11 16,11 2,11 21,11 4,11 7,11 8,13 1,13 12,13 15,13 16,13 2,13 21,13 4,13 7,13 8,18 1,18 12,18 15,18 16,18 2,18 21,18 4,18 7,18 8,22 1,22 12,22 15,22 16,22 2,22 21,22 4,22 7,22 8,26 1,26 12,26 15,26 16,26 2,26 21,26 4,26 7,26 8,34 29,34 30,34 33
5000
78 - valid Next* - two synonym, select tuple
print p; if i;
Select <p, i> such that Next*(p, i)
11 3, 11 10, 13 3, 13 10, 18 3, 18 10, 22 3, 22 10, 26 3, 26 10
5000
79 - valid Next* - two synonym, select tuple
print p; if i;
Select <p, i> such that Next*(i, p)
11 3, 11 10, 13 3, 13 10, 18 3, 18 10, 22 3, 22 10, 26 3, 26 10
5000
80 - valid Next* - two synonym, select tuple
call c; assign a;
Select <c, a> such that Next*(c, a)
23 5, 23 6, 23 9, 23 17, 23 19, 23 20, 23 24, 23 25, 23 27, 23 28
5000
81 - valid Next* - two synonym, select tuple
call c; while w;
Select <c, w> such that Next*(w, c)
23 1, 23 2, 23 12, 23 15, 23 16, 23 21, 23 4, 23 7, 23 8
5000
82 - valid Next* - two synonym, select tuple
call c; if i;
Select <c, i> such that Next*(c, i)
23 10, 23 3
5000
83 - valid Next* - two synonym, select tuple
call c; if i;
Select <c, i> such that Next*(i, c)
23 10, 23 3
5000
84 - invalid Next* - procedure
procedure p;
Select BOOLEAN such that Next*(1, p)
SemanticError
5000
85 - invalid Next* - variable
variable v;
Select BOOLEAN such that Next*(1, v)
SemanticError
5000
86 - invalid Next* - entRef

Select BOOLEAN such that Next*(29, "x35")
SyntaxError
5000